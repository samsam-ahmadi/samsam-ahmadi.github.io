<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Scope on Kill The Js | Samsam Ahmadi,Front-end Developer</title>
    <link>https://killthejs.com/tags/scope/</link>
    <description>Recent content in Scope on Kill The Js | Samsam Ahmadi,Front-end Developer</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>fa-ir</language>
    <lastBuildDate>Sun, 16 Jul 2017 13:07:31 +0200</lastBuildDate>
    
	<atom:link href="https://killthejs.com/tags/scope/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>کاربرد scope-closure چیست؟</title>
      <link>https://killthejs.com/2017/%DA%A9%D8%A7%D8%B1%D8%A8%D8%B1%D8%AF-scope-closure-%DA%86%DB%8C%D8%B3%D8%AA/</link>
      <pubDate>Sun, 16 Jul 2017 13:07:31 +0200</pubDate>
      
      <guid>https://killthejs.com/2017/%DA%A9%D8%A7%D8%B1%D8%A8%D8%B1%D8%AF-scope-closure-%DA%86%DB%8C%D8%B3%D8%AA/</guid>
      <description>scope اسکوپ (محدوده) چرا اینقدر مهمه؟
در ابتدا دو تا قسمت اصلی از جاوااسکریپت رو معرفی میکنم تا با چگونگی کارکرد جاوا اسکریپت اشنا بشیم.
Engine: مسئول شروع و پایان کامپایل برنامه جاوااسکریپت ما و اجرای اون هست
Compiler: کارش انجام دادن parsing و code-generation (این دوتا کلا بحثش زیاده شاید بعدا گفتم)
حالا بریم سروقت اسکوپ.
Scope: اسکوپ میاد هرچی متغیر رو ما تعریف کردیم جمع و نگهداری میکنه،وقتی که engine مقداری رو میخواد ،جستجو میکنه و بر حسب موقعیت و مجوز و &amp;hellip; مقدار میده به engine</description>
    </item>
    
  </channel>
</rss>